import { resolveComponent, useSSRContext } from "vue";
import { ssrRenderAttrs, ssrRenderStyle, ssrRenderComponent } from "vue/server-renderer";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"MeManager","description":"","frontmatter":{"outline":[1,4],"next":false,"prev":false},"headers":[],"relativePath":"documentation/classes/MeManager.md","filePath":"documentation/classes/MeManager.md"}');
const _sfc_main = { name: "documentation/classes/MeManager.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Badge = resolveComponent("Badge");
  _push(`<div${ssrRenderAttrs(_attrs)}><p>export Class</p><h1 id="memanager" tabindex="-1">MeManager <a class="header-anchor" href="#memanager" aria-label="Permalink to &quot;MeManager&quot;">​</a></h1><h4 id="extends" tabindex="-1">extends <a class="header-anchor" href="#extends" aria-label="Permalink to &quot;extends&quot;">​</a></h4><p><code>BaseClass</code>&lt;<a href="./MeManager.html"><code>MeManager</code></a>, <a href="./User.html"><code>User</code></a>&gt;</p><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">new</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> MeManager</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">( client )</span></span></code></pre></div><table tabindex="0"><thead><tr><th style="${ssrRenderStyle({ "text-align": "left" })}">Parameter</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Type</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Description</th></tr></thead><tbody><tr><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>client</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"><a href="./Client.html"><code>Client</code></a></td><td style="${ssrRenderStyle({ "text-align": "left" })}"></td></tr></tbody></table><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h4 id="added-to-attachment-menu-boolean" tabindex="-1">added_to_attachment_menu? : <code>boolean</code> <a class="header-anchor" href="#added-to-attachment-menu-boolean" aria-label="Permalink to &quot;added_to_attachment_menu? : \`boolean\`&quot;">​</a></h4><h4 id="adminsitrator-rights-object" tabindex="-1">adminsitrator_rights : <code>Object</code> <a class="header-anchor" href="#adminsitrator-rights-object" aria-label="Permalink to &quot;adminsitrator_rights : \`Object\`&quot;">​</a></h4><h4 id="can-connect-to-business-boolean" tabindex="-1">can_connect_to_business? : <code>boolean</code> <a class="header-anchor" href="#can-connect-to-business-boolean" aria-label="Permalink to &quot;can_connect_to_business? : \`boolean\`&quot;">​</a></h4><h4 id="can-join-groups-boolean" tabindex="-1">can_join_groups? : <code>boolean</code> <a class="header-anchor" href="#can-join-groups-boolean" aria-label="Permalink to &quot;can_join_groups? : \`boolean\`&quot;">​</a></h4><h4 id="can-read-all-group-messages-boolean" tabindex="-1">can_read_all_group_messages? : <code>boolean</code> <a class="header-anchor" href="#can-read-all-group-messages-boolean" aria-label="Permalink to &quot;can_read_all_group_messages? : \`boolean\`&quot;">​</a></h4><h4 id="readonly-client-client" tabindex="-1">`);
  _push(ssrRenderComponent(_component_Badge, {
    type: "danger",
    text: "readonly"
  }, null, _parent));
  _push(` client : <a href="./Client.html"><code>Client</code></a> <a class="header-anchor" href="#readonly-client-client" aria-label="Permalink to &quot;$readonly client : [\`Client\`](./Client.md)&quot;">​</a></h4><h4 id="description-string" tabindex="-1">description? : <code>string</code> <a class="header-anchor" href="#description-string" aria-label="Permalink to &quot;description? : \`string\`&quot;">​</a></h4><h4 id="first-name-string" tabindex="-1">first_name? : <code>string</code> <a class="header-anchor" href="#first-name-string" aria-label="Permalink to &quot;first_name? : \`string\`&quot;">​</a></h4><h4 id="has-main-web-app-boolean" tabindex="-1">has_main_web_app? : <code>boolean</code> <a class="header-anchor" href="#has-main-web-app-boolean" aria-label="Permalink to &quot;has_main_web_app? : \`boolean\`&quot;">​</a></h4><h4 id="id-number" tabindex="-1">id? : <code>number</code> <a class="header-anchor" href="#id-number" aria-label="Permalink to &quot;id? : \`number\`&quot;">​</a></h4><h4 id="is-bot-boolean" tabindex="-1">is_bot? : <code>boolean</code> <a class="header-anchor" href="#is-bot-boolean" aria-label="Permalink to &quot;is_bot? : \`boolean\`&quot;">​</a></h4><h4 id="is-premium-boolean" tabindex="-1">is_premium? : <code>boolean</code> <a class="header-anchor" href="#is-premium-boolean" aria-label="Permalink to &quot;is_premium? : \`boolean\`&quot;">​</a></h4><h4 id="language-code-string" tabindex="-1">language_code? : <code>string</code> <a class="header-anchor" href="#language-code-string" aria-label="Permalink to &quot;language_code? : \`string\`&quot;">​</a></h4><h4 id="last-name-string" tabindex="-1">last_name? : <code>string</code> <a class="header-anchor" href="#last-name-string" aria-label="Permalink to &quot;last_name? : \`string\`&quot;">​</a></h4><h4 id="name-string" tabindex="-1">name? : <code>string</code> <a class="header-anchor" href="#name-string" aria-label="Permalink to &quot;name? : \`string\`&quot;">​</a></h4><h4 id="short-description-string" tabindex="-1">short_description? : <code>string</code> <a class="header-anchor" href="#short-description-string" aria-label="Permalink to &quot;short_description? : \`string\`&quot;">​</a></h4><h4 id="supports-inline-queries-boolean" tabindex="-1">supports_inline_queries? : <code>boolean</code> <a class="header-anchor" href="#supports-inline-queries-boolean" aria-label="Permalink to &quot;supports_inline_queries? : \`boolean\`&quot;">​</a></h4><h4 id="username-string" tabindex="-1">username? : <code>string</code> <a class="header-anchor" href="#username-string" aria-label="Permalink to &quot;username? : \`string\`&quot;">​</a></h4><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h4 id="asyncgetbusinessconnection-business-connection-id" tabindex="-1">`);
  _push(ssrRenderComponent(_component_Badge, {
    type: "tip",
    text: "async"
  }, null, _parent));
  _push(`getBusinessConnection( business_connection_id ) <a class="header-anchor" href="#asyncgetbusinessconnection-business-connection-id" aria-label="Permalink to &quot;$asyncgetBusinessConnection( business_connection_id )&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="${ssrRenderStyle({ "text-align": "left" })}">Parameter</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Type</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Description</th></tr></thead><tbody><tr><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>business_connection_id</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>string</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"></td></tr></tbody></table><p>Returns: <code>Promise</code>&lt;<a href="./../interfaces/BusinessConnectionPacket.html"><code>BusinessConnectionPacket</code></a>&gt;</p><h4 id="asyncgetmenubutton-chat-id" tabindex="-1">`);
  _push(ssrRenderComponent(_component_Badge, {
    type: "tip",
    text: "async"
  }, null, _parent));
  _push(`getMenuButton( chat_id ) <a class="header-anchor" href="#asyncgetmenubutton-chat-id" aria-label="Permalink to &quot;$asyncgetMenuButton( chat_id )&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="${ssrRenderStyle({ "text-align": "left" })}">Parameter</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Type</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Description</th></tr></thead><tbody><tr><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>chat_id?</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>number</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"></td></tr></tbody></table><p>Returns: <code>Promise</code>&lt;<a href="./../type-aliases/ChatMenuButton.html"><code>ChatMenuButton</code></a>&gt;</p><h4 id="asyncsetdescription-description-language-code" tabindex="-1">`);
  _push(ssrRenderComponent(_component_Badge, {
    type: "tip",
    text: "async"
  }, null, _parent));
  _push(`setDescription( description, language_code ) <a class="header-anchor" href="#asyncsetdescription-description-language-code" aria-label="Permalink to &quot;$asyncsetDescription( description, language_code )&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="${ssrRenderStyle({ "text-align": "left" })}">Parameter</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Type</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Description</th></tr></thead><tbody><tr><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>description</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>string</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"></td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>language_code?</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>string</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"></td></tr></tbody></table><p>Returns: <code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="asyncsetmenubutton-chat-id-menu-button" tabindex="-1">`);
  _push(ssrRenderComponent(_component_Badge, {
    type: "tip",
    text: "async"
  }, null, _parent));
  _push(`setMenuButton( chat_id, menu_button ) <a class="header-anchor" href="#asyncsetmenubutton-chat-id-menu-button" aria-label="Permalink to &quot;$asyncsetMenuButton( chat_id, menu_button )&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="${ssrRenderStyle({ "text-align": "left" })}">Parameter</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Type</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Description</th></tr></thead><tbody><tr><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>chat_id?</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>number</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"></td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>menu_button?</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"><a href="./../type-aliases/ChatMenuButton.html"><code>ChatMenuButton</code></a></td><td style="${ssrRenderStyle({ "text-align": "left" })}"></td></tr></tbody></table><p>Returns: <code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="asyncsetmydefaultadministratorrights-rights-for-channels" tabindex="-1">`);
  _push(ssrRenderComponent(_component_Badge, {
    type: "tip",
    text: "async"
  }, null, _parent));
  _push(`setMyDefaultAdministratorRights( rights, for_channels ) <a class="header-anchor" href="#asyncsetmydefaultadministratorrights-rights-for-channels" aria-label="Permalink to &quot;$asyncsetMyDefaultAdministratorRights( rights, for_channels )&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="${ssrRenderStyle({ "text-align": "left" })}">Parameter</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Type</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Description</th></tr></thead><tbody><tr><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>rights</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>ChatAdministratorRights</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"></td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>for_channels</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>boolean</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"></td></tr></tbody></table><p>Returns: <code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="asyncsetname-name-language-code" tabindex="-1">`);
  _push(ssrRenderComponent(_component_Badge, {
    type: "tip",
    text: "async"
  }, null, _parent));
  _push(`setName( name, language_code ) <a class="header-anchor" href="#asyncsetname-name-language-code" aria-label="Permalink to &quot;$asyncsetName( name, language_code )&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="${ssrRenderStyle({ "text-align": "left" })}">Parameter</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Type</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Description</th></tr></thead><tbody><tr><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>name</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>string</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"></td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>language_code?</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>string</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"></td></tr></tbody></table><p>Returns: <code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="asyncsetshortdescription-short-description-language-code" tabindex="-1">`);
  _push(ssrRenderComponent(_component_Badge, {
    type: "tip",
    text: "async"
  }, null, _parent));
  _push(`setShortDescription( short_description, language_code ) <a class="header-anchor" href="#asyncsetshortdescription-short-description-language-code" aria-label="Permalink to &quot;$asyncsetShortDescription( short_description, language_code )&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="${ssrRenderStyle({ "text-align": "left" })}">Parameter</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Type</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Description</th></tr></thead><tbody><tr><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>short_description</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>string</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"></td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>language_code?</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>string</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"></td></tr></tbody></table><p>Returns: <code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="asyncupdate" tabindex="-1">`);
  _push(ssrRenderComponent(_component_Badge, {
    type: "tip",
    text: "async"
  }, null, _parent));
  _push(`update( ) <a class="header-anchor" href="#asyncupdate" aria-label="Permalink to &quot;$asyncupdate( )&quot;">​</a></h4><p>Returns: <code>Promise</code>&lt;<code>boolean</code>&gt;</p></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("documentation/classes/MeManager.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const MeManager = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  MeManager as default
};
