import { ssrRenderAttrs } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"Sticker","description":"","frontmatter":{"outline":[1,4],"next":false,"prev":false},"headers":[],"relativePath":"documentation/interfaces/Sticker.md","filePath":"documentation/interfaces/Sticker.md"}');
const _sfc_main = { name: "documentation/interfaces/Sticker.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><p>export Interface</p><h1 id="sticker" tabindex="-1">Sticker <a class="header-anchor" href="#sticker" aria-label="Permalink to &quot;Sticker&quot;">​</a></h1><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h4 id="custom-emoji-id-string" tabindex="-1">custom_emoji_id? : <code>string</code> <a class="header-anchor" href="#custom-emoji-id-string" aria-label="Permalink to &quot;custom_emoji_id? : \`string\`&quot;">​</a></h4><h4 id="emoji-string" tabindex="-1">emoji? : <code>string</code> <a class="header-anchor" href="#emoji-string" aria-label="Permalink to &quot;emoji? : \`string\`&quot;">​</a></h4><h4 id="file-id-string" tabindex="-1">file_id : <code>string</code> <a class="header-anchor" href="#file-id-string" aria-label="Permalink to &quot;file_id : \`string\`&quot;">​</a></h4><h4 id="file-size-number" tabindex="-1">file_size? : <code>number</code> <a class="header-anchor" href="#file-size-number" aria-label="Permalink to &quot;file_size? : \`number\`&quot;">​</a></h4><h4 id="file-unique-id-string" tabindex="-1">file_unique_id : <code>string</code> <a class="header-anchor" href="#file-unique-id-string" aria-label="Permalink to &quot;file_unique_id : \`string\`&quot;">​</a></h4><h4 id="height-number" tabindex="-1">height : <code>number</code> <a class="header-anchor" href="#height-number" aria-label="Permalink to &quot;height : \`number\`&quot;">​</a></h4><h4 id="is-animated-boolean" tabindex="-1">is_animated : <code>boolean</code> <a class="header-anchor" href="#is-animated-boolean" aria-label="Permalink to &quot;is_animated : \`boolean\`&quot;">​</a></h4><h4 id="is-video-boolean" tabindex="-1">is_video : <code>boolean</code> <a class="header-anchor" href="#is-video-boolean" aria-label="Permalink to &quot;is_video : \`boolean\`&quot;">​</a></h4><h4 id="mask-position-maskposition" tabindex="-1">mask_position? : <a href="./MaskPosition.html"><code>MaskPosition</code></a> <a class="header-anchor" href="#mask-position-maskposition" aria-label="Permalink to &quot;mask_position? : [\`MaskPosition\`](./MaskPosition.md)&quot;">​</a></h4><h4 id="needs-repainting-true" tabindex="-1">needs_repainting? : <code>true</code> <a class="header-anchor" href="#needs-repainting-true" aria-label="Permalink to &quot;needs_repainting? : \`true\`&quot;">​</a></h4><h4 id="premium-animation-file" tabindex="-1">premium_animation? : <code>File</code> <a class="header-anchor" href="#premium-animation-file" aria-label="Permalink to &quot;premium_animation? : \`File\`&quot;">​</a></h4><h4 id="set-name-string" tabindex="-1">set_name? : <code>string</code> <a class="header-anchor" href="#set-name-string" aria-label="Permalink to &quot;set_name? : \`string\`&quot;">​</a></h4><h4 id="thumbnail-photosize" tabindex="-1">thumbnail? : <a href="./PhotoSize.html"><code>PhotoSize</code></a> <a class="header-anchor" href="#thumbnail-photosize" aria-label="Permalink to &quot;thumbnail? : [\`PhotoSize\`](./PhotoSize.md)&quot;">​</a></h4><h4 id="type-regular-mask-custom-emoji" tabindex="-1">type : <code>&quot;regular&quot;</code> | <code>&quot;mask&quot;</code> | <code>&quot;custom_emoji&quot;</code> <a class="header-anchor" href="#type-regular-mask-custom-emoji" aria-label="Permalink to &quot;type : \`&quot;regular&quot;\` \\| \`&quot;mask&quot;\` \\| \`&quot;custom_emoji&quot;\`&quot;">​</a></h4><h4 id="width-number" tabindex="-1">width : <code>number</code> <a class="header-anchor" href="#width-number" aria-label="Permalink to &quot;width : \`number\`&quot;">​</a></h4></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("documentation/interfaces/Sticker.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const Sticker = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  Sticker as default
};
