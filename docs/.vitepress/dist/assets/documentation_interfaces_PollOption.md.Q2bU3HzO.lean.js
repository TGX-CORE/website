import{_ as t,c as a,a2 as o,o as i}from"./chunks/framework.DPuwY6B9.js";const m=JSON.parse('{"title":"PollOption","description":"","frontmatter":{"outline":[1,4],"next":false,"prev":false},"headers":[],"relativePath":"documentation/interfaces/PollOption.md","filePath":"documentation/interfaces/PollOption.md"}'),s={name:"documentation/interfaces/PollOption.md"};function n(r,e,l,p,d,c){return i(),a("div",null,e[0]||(e[0]=[o('<p>export Interface</p><h1 id="polloption" tabindex="-1">PollOption <a class="header-anchor" href="#polloption" aria-label="Permalink to &quot;PollOption&quot;">​</a></h1><p>Represents an option of a poll to be sent.</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h4 id="text-string" tabindex="-1">text : <code>string</code> <a class="header-anchor" href="#text-string" aria-label="Permalink to &quot;text : `string`&quot;">​</a></h4><blockquote><p>Option text, 1-100 characters</p></blockquote><h4 id="text-entities-messageentities-messageentitypayload" tabindex="-1">text_entities? : <a href="./../classes/MessageEntities.html"><code>MessageEntities</code></a> | <a href="./MessageEntityPayload.html"><code>MessageEntityPayload[]</code></a> <a class="header-anchor" href="#text-entities-messageentities-messageentitypayload" aria-label="Permalink to &quot;text_entities? : [`MessageEntities`](../classes/MessageEntities.md) \\| [`MessageEntityPayload[]`](./MessageEntityPayload.md)&quot;">​</a></h4><blockquote><p>List of special entities that appear in the poll option text. It can be specified instead of text_parse_mode.</p></blockquote><h4 id="text-parse-mode-string" tabindex="-1">text_parse_mode? : <code>string</code> <a class="header-anchor" href="#text-parse-mode-string" aria-label="Permalink to &quot;text_parse_mode? : `string`&quot;">​</a></h4><blockquote><p>Mode for parsing entities in the text. See formatting options for more details. Currently, only custom emoji entities are allowed.</p></blockquote>',10)]))}const f=t(s,[["render",n]]);export{m as __pageData,f as default};
