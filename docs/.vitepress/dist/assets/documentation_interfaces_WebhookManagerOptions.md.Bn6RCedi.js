import{_ as e,c as a,o as t,a4 as o}from"./chunks/framework.CRCV4hx_.js";const u=JSON.parse('{"title":"WebhookManagerOptions","description":"","frontmatter":{"outline":[1,4],"next":false,"prev":false},"headers":[],"relativePath":"documentation/interfaces/WebhookManagerOptions.md","filePath":"documentation/interfaces/WebhookManagerOptions.md"}'),r={name:"documentation/interfaces/WebhookManagerOptions.md"},n=o('<p>export Interface</p><h1 id="webhookmanageroptions" tabindex="-1">WebhookManagerOptions <a class="header-anchor" href="#webhookmanageroptions" aria-label="Permalink to &quot;WebhookManagerOptions&quot;">​</a></h1><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h4 id="certificate-string" tabindex="-1">certificate? : <code>string</code> <a class="header-anchor" href="#certificate-string" aria-label="Permalink to &quot;certificate? : `string`&quot;">​</a></h4><p>Set the relative path to the file to set as your public key certificate.</p><h4 id="drop-pending-updates-boolean" tabindex="-1">drop_pending_updates? : <code>boolean</code> <a class="header-anchor" href="#drop-pending-updates-boolean" aria-label="Permalink to &quot;drop_pending_updates? : `boolean`&quot;">​</a></h4><h4 id="endpoint-string" tabindex="-1">endpoint? : <code>string</code> <a class="header-anchor" href="#endpoint-string" aria-label="Permalink to &quot;endpoint? : `string`&quot;">​</a></h4><p>The endpoint of the path the client will listen in e.g: /webhook -&gt; <a href="https://example.com/webhook" target="_blank" rel="noreferrer">https://example.com/webhook</a></p><h4 id="ip-address-string" tabindex="-1">ip_address? : <code>string</code> <a class="header-anchor" href="#ip-address-string" aria-label="Permalink to &quot;ip_address? : `string`&quot;">​</a></h4><h4 id="max-connections-number" tabindex="-1">max_connections? : <code>number</code> <a class="header-anchor" href="#max-connections-number" aria-label="Permalink to &quot;max_connections? : `number`&quot;">​</a></h4><h4 id="port-number" tabindex="-1">port? : <code>number</code> <a class="header-anchor" href="#port-number" aria-label="Permalink to &quot;port? : `number`&quot;">​</a></h4><p>Set the port, it is randomized if empty, min 1024, max 65535.</p><h4 id="secret-token-string" tabindex="-1">secret_token? : <code>string</code> <a class="header-anchor" href="#secret-token-string" aria-label="Permalink to &quot;secret_token? : `string`&quot;">​</a></h4><h4 id="update-boolean" tabindex="-1">update? : <code>boolean</code> <a class="header-anchor" href="#update-boolean" aria-label="Permalink to &quot;update? : `boolean`&quot;">​</a></h4><h4 id="url-string" tabindex="-1">url? : <code>string</code> <a class="header-anchor" href="#url-string" aria-label="Permalink to &quot;url? : `string`&quot;">​</a></h4><p>Must be set with your current host, e.g: <a href="https://example.com" target="_blank" rel="noreferrer">https://example.com</a> -&gt; <a href="https://example.com/webhook" target="_blank" rel="noreferrer">https://example.com/webhook</a></p><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">​</a></h2><p>The information was provided from the <a href="https://core.telegram.org/bots/api#setwebhook" target="_blank" rel="noreferrer"><code>Telegram API</code></a>.</p>',18),i=[n];function s(c,d,h,l,p,b){return t(),a("div",null,i)}const f=e(r,[["render",s]]);export{u as __pageData,f as default};
