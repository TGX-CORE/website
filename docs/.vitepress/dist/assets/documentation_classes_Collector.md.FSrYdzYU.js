import{_ as d,D as s,c as n,j as e,I as l,a as t,a4 as a,o as c}from"./chunks/framework.CRCV4hx_.js";const B=JSON.parse('{"title":"Collector","description":"","frontmatter":{"outline":[1,4],"next":false,"prev":false},"headers":[],"relativePath":"documentation/classes/Collector.md","filePath":"documentation/classes/Collector.md"}'),i={name:"documentation/classes/Collector.md"},r=a('<p>export abstract Class</p><h1 id="collector" tabindex="-1">Collector <a class="header-anchor" href="#collector" aria-label="Permalink to &quot;Collector&quot;">​</a></h1><h4 id="extends" tabindex="-1">extends <a class="header-anchor" href="#extends" aria-label="Permalink to &quot;extends&quot;">​</a></h4><p><code>EventEmitter</code></p><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Collector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( client, options )</span></span></code></pre></div><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>client</code></td><td style="text-align:left;"><a href="./Client.html"><code>Client</code></a></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><code>Collector.O</code></td><td style="text-align:left;"></td></tr></tbody></table><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2>',8),h={id:"get-endreason-undefined-string",tabindex:"-1"},p=e("code",null,"undefined",-1),_=e("code",null,"string",-1),y=e("a",{class:"header-anchor",href:"#get-endreason-undefined-string","aria-label":'Permalink to "$get endReason : `undefined` \\| `string`"'},"​",-1),x={id:"get-next-promise-message",tabindex:"-1"},f=e("code",null,"Promise",-1),b=e("a",{href:"./Message.html"},[e("code",null,"Message")],-1),g=e("a",{class:"header-anchor",href:"#get-next-promise-message","aria-label":'Permalink to "$get next : `Promise`\\<[`Message`](./Message.md)\\>"'},"​",-1),u={id:"readonly-client-client",tabindex:"-1"},m=e("a",{href:"./Client.html"},[e("code",null,"Client")],-1),C=e("a",{class:"header-anchor",href:"#readonly-client-client","aria-label":'Permalink to "$readonly client : [`Client`](./Client.md)"'},"​",-1),P=a('<h4 id="collection-collection-collector-i-any" tabindex="-1">collection : <code>Collection</code>&lt;<code>Collector.I</code>, <code>any</code>&gt; <a class="header-anchor" href="#collection-collection-collector-i-any" aria-label="Permalink to &quot;collection : `Collection`\\&lt;`Collector.I`, `any`\\&gt;&quot;">​</a></h4><h4 id="ended-boolean" tabindex="-1">ended : <code>boolean</code> <a class="header-anchor" href="#ended-boolean" aria-label="Permalink to &quot;ended : `boolean`&quot;">​</a></h4><h4 id="filter-collectorfilter" tabindex="-1">filter : <a href="./../type-aliases/CollectorFilter.html"><code>CollectorFilter</code></a> <a class="header-anchor" href="#filter-collectorfilter" aria-label="Permalink to &quot;filter : [`CollectorFilter`](../type-aliases/CollectorFilter.md)&quot;">​</a></h4><h4 id="options-collector-o" tabindex="-1">options : <code>Collector.O</code> <a class="header-anchor" href="#options-collector-o" aria-label="Permalink to &quot;options : `Collector.O`&quot;">​</a></h4><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h4 id="asynciterator" tabindex="-1"><a href="./.html">asyncIterator</a> <a class="header-anchor" href="#asynciterator" aria-label="Permalink to &quot;[asyncIterator]( )&quot;">​</a></h4><p>Returns: <code>AsyncGenerator</code>&lt;<code>unknown</code>, <code>void</code>, <code>unknown</code>&gt;</p><h4 id="checkend" tabindex="-1">checkEnd( ) <a class="header-anchor" href="#checkend" aria-label="Permalink to &quot;checkEnd( )&quot;">​</a></h4><p>Returns: <code>boolean</code></p><h4 id="collect-collect" tabindex="-1">collect( collect ) <a class="header-anchor" href="#collect-collect" aria-label="Permalink to &quot;collect( collect )&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>collect</code></td><td style="text-align:left;"><code>Collector.C</code></td><td style="text-align:left;"></td></tr></tbody></table><p>Returns: <code>null</code> | <code>Collector.I</code></p><h4 id="dispose-dispose" tabindex="-1">dispose( dispose ) <a class="header-anchor" href="#dispose-dispose" aria-label="Permalink to &quot;dispose( dispose )&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>dispose</code></td><td style="text-align:left;"><code>Collector.C</code></td><td style="text-align:left;"></td></tr></tbody></table><p>Returns: <code>null</code> | <code>Collector.I</code></p>',15),k={id:"asynchandlecollect-collect",tabindex:"-1"},T=e("a",{class:"header-anchor",href:"#asynchandlecollect-collect","aria-label":'Permalink to "$asynchandleCollect( collect )"'},"​",-1),q=a('<table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>collect</code></td><td style="text-align:left;"><code>Collector.C</code></td><td style="text-align:left;"></td></tr></tbody></table><p>Returns: <code>Promise</code>&lt;<code>void</code>&gt;</p>',2),D={id:"asynchandledispose-dispose",tabindex:"-1"},I=e("a",{class:"header-anchor",href:"#asynchandledispose-dispose","aria-label":'Permalink to "$asynchandleDispose( dispose )"'},"​",-1),v=a('<table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>dispose</code></td><td style="text-align:left;"><code>Collector.C</code></td><td style="text-align:left;"></td></tr></tbody></table><p>Returns: <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="stop-reason" tabindex="-1">stop( reason ) <a class="header-anchor" href="#stop-reason" aria-label="Permalink to &quot;stop( reason )&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>reason</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"></td></tr></tbody></table><p>Returns: <code>void</code></p>',5);function A(S,E,R,V,N,$){const o=s("Badge");return c(),n("div",null,[r,e("h4",h,[l(o,{type:"danger",text:"get"}),t(" endReason : "),p,t(" | "),_,t(),y]),e("h4",x,[l(o,{type:"danger",text:"get"}),t(" next : "),f,t("<"),b,t("> "),g]),e("h4",u,[l(o,{type:"danger",text:"readonly"}),t(" client : "),m,t(),C]),P,e("h4",k,[l(o,{type:"tip",text:"async"}),t("handleCollect( collect ) "),T]),q,e("h4",D,[l(o,{type:"tip",text:"async"}),t("handleDispose( dispose ) "),I]),v])}const M=d(i,[["render",A]]);export{B as __pageData,M as default};
