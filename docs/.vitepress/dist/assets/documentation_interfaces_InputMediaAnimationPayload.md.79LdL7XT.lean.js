import{_ as e,c as t,a2 as i,o}from"./chunks/framework.DPuwY6B9.js";const u=JSON.parse('{"title":"InputMediaAnimationPayload","description":"","frontmatter":{"outline":[1,4],"next":false,"prev":false},"headers":[],"relativePath":"documentation/interfaces/InputMediaAnimationPayload.md","filePath":"documentation/interfaces/InputMediaAnimationPayload.md"}'),n={name:"documentation/interfaces/InputMediaAnimationPayload.md"};function r(d,a,s,l,h,c){return o(),t("div",null,a[0]||(a[0]=[i('<p>export Interface</p><h1 id="inputmediaanimationpayload" tabindex="-1">InputMediaAnimationPayload <a class="header-anchor" href="#inputmediaanimationpayload" aria-label="Permalink to &quot;InputMediaAnimationPayload&quot;">​</a></h1><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h4 id="caption-string" tabindex="-1">caption? : <code>string</code> <a class="header-anchor" href="#caption-string" aria-label="Permalink to &quot;caption? : `string`&quot;">​</a></h4><h4 id="caption-entities-messageentities-messageentitypayload" tabindex="-1">caption_entities? : <a href="./../classes/MessageEntities.html"><code>MessageEntities</code></a> | <a href="./MessageEntityPayload.html"><code>MessageEntityPayload[]</code></a> <a class="header-anchor" href="#caption-entities-messageentities-messageentitypayload" aria-label="Permalink to &quot;caption_entities? : [`MessageEntities`](../classes/MessageEntities.md) \\| [`MessageEntityPayload[]`](./MessageEntityPayload.md)&quot;">​</a></h4><h4 id="duration-number" tabindex="-1">duration? : <code>number</code> <a class="header-anchor" href="#duration-number" aria-label="Permalink to &quot;duration? : `number`&quot;">​</a></h4><h4 id="has-spoiler-boolean" tabindex="-1">has_spoiler? : <code>boolean</code> <a class="header-anchor" href="#has-spoiler-boolean" aria-label="Permalink to &quot;has_spoiler? : `boolean`&quot;">​</a></h4><h4 id="height-number" tabindex="-1">height? : <code>number</code> <a class="header-anchor" href="#height-number" aria-label="Permalink to &quot;height? : `number`&quot;">​</a></h4><h4 id="media-string" tabindex="-1">media : <code>string</code> <a class="header-anchor" href="#media-string" aria-label="Permalink to &quot;media : `string`&quot;">​</a></h4><h4 id="parse-mode-string" tabindex="-1">parse_mode? : <code>string</code> <a class="header-anchor" href="#parse-mode-string" aria-label="Permalink to &quot;parse_mode? : `string`&quot;">​</a></h4><h4 id="show-caption-above-media-boolean" tabindex="-1">show_caption_above_media? : <code>boolean</code> <a class="header-anchor" href="#show-caption-above-media-boolean" aria-label="Permalink to &quot;show_caption_above_media? : `boolean`&quot;">​</a></h4><h4 id="thumbnail-inputfile" tabindex="-1">thumbnail? : <a href="./../type-aliases/InputFile.html"><code>InputFile</code></a> <a class="header-anchor" href="#thumbnail-inputfile" aria-label="Permalink to &quot;thumbnail? : [`InputFile`](../type-aliases/InputFile.md)&quot;">​</a></h4><h4 id="type-animation" tabindex="-1">type? : <code>&quot;animation&quot;</code> <a class="header-anchor" href="#type-animation" aria-label="Permalink to &quot;type? : `&quot;animation&quot;`&quot;">​</a></h4><h4 id="width-number" tabindex="-1">width? : <code>number</code> <a class="header-anchor" href="#width-number" aria-label="Permalink to &quot;width? : `number`&quot;">​</a></h4>',14)]))}const p=e(n,[["render",r]]);export{u as __pageData,p as default};
