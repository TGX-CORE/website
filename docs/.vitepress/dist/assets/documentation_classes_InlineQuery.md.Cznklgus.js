import{_ as s,c as o,a2 as r,j as t,G as l,a,B as i,o as d}from"./chunks/framework.DPuwY6B9.js";const q=JSON.parse('{"title":"InlineQuery","description":"","frontmatter":{"outline":[1,4],"next":false,"prev":false},"headers":[],"relativePath":"documentation/classes/InlineQuery.md","filePath":"documentation/classes/InlineQuery.md"}'),c={name:"documentation/classes/InlineQuery.md"},h={id:"get-user-user",tabindex:"-1"},u={id:"readonly-client-client",tabindex:"-1"},f={id:"asyncanswer-results-button-next-offset-is-personal-cache-time",tabindex:"-1"};function y(p,e,m,g,x,b){const n=i("Badge");return d(),o("div",null,[e[10]||(e[10]=r('<p>export Class</p><h1 id="inlinequery" tabindex="-1">InlineQuery <a class="header-anchor" href="#inlinequery" aria-label="Permalink to &quot;InlineQuery&quot;">​</a></h1><h4 id="extends" tabindex="-1">extends <a class="header-anchor" href="#extends" aria-label="Permalink to &quot;extends&quot;">​</a></h4><p><code>BaseClass</code>&lt;<a href="./InlineQuery.html"><code>InlineQuery</code></a>, <a href="./../interfaces/InlineQueryPacket.html"><code>InlineQueryPacket</code></a>&gt;</p><h4 id="implements" tabindex="-1">implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;implements&quot;">​</a></h4><p><a href="./../interfaces/InlineQueryPacket.html"><code>InlineQueryPacket</code></a></p><p>Represents an incoming inline query.</p><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InlineQuery</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( client, packet )</span></span></code></pre></div><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>client</code></td><td style="text-align:left;"><a href="./Client.html"><code>Client</code></a></td><td style="text-align:left;">The client of the incoming inline query.</td></tr><tr><td style="text-align:left;"><code>packet</code></td><td style="text-align:left;"><a href="./../interfaces/InlineQueryPacket.html"><code>InlineQueryPacket</code></a></td><td style="text-align:left;">The packet of the incoming inline query.</td></tr></tbody></table><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2>',11)),t("h4",h,[l(n,{type:"danger",text:"get"}),e[0]||(e[0]=a(" user : ")),e[1]||(e[1]=t("a",{href:"./User.html"},[t("code",null,"User")],-1)),e[2]||(e[2]=a()),e[3]||(e[3]=t("a",{class:"header-anchor",href:"#get-user-user","aria-label":'Permalink to "$get user : [`User`](./User.md)"'},"​",-1))]),e[11]||(e[11]=t("h4",{id:"chat-type-channel-private-group-supergroup",tabindex:"-1"},[a("chat_type? : "),t("code",null,'"channel"'),a(" | "),t("code",null,'"private"'),a(" | "),t("code",null,'"group"'),a(" | "),t("code",null,'"supergroup"'),a(),t("a",{class:"header-anchor",href:"#chat-type-channel-private-group-supergroup","aria-label":'Permalink to "chat_type? : `"channel"` \\| `"private"` \\| `"group"` \\| `"supergroup"`"'},"​")],-1)),t("h4",u,[l(n,{type:"danger",text:"readonly"}),e[4]||(e[4]=a(" client : ")),e[5]||(e[5]=t("a",{href:"./Client.html"},[t("code",null,"Client")],-1)),e[6]||(e[6]=a()),e[7]||(e[7]=t("a",{class:"header-anchor",href:"#readonly-client-client","aria-label":'Permalink to "$readonly client : [`Client`](./Client.md)"'},"​",-1))]),e[12]||(e[12]=r('<h4 id="from-user" tabindex="-1">from : <a href="./User.html"><code>User</code></a> <a class="header-anchor" href="#from-user" aria-label="Permalink to &quot;from : [`User`](./User.md)&quot;">​</a></h4><h4 id="id-string" tabindex="-1">id : <code>string</code> <a class="header-anchor" href="#id-string" aria-label="Permalink to &quot;id : `string`&quot;">​</a></h4><h4 id="location-locationpacket" tabindex="-1">location? : <a href="./../interfaces/LocationPacket.html"><code>LocationPacket</code></a> <a class="header-anchor" href="#location-locationpacket" aria-label="Permalink to &quot;location? : [`LocationPacket`](../interfaces/LocationPacket.md)&quot;">​</a></h4><h4 id="offset-string" tabindex="-1">offset : <code>string</code> <a class="header-anchor" href="#offset-string" aria-label="Permalink to &quot;offset : `string`&quot;">​</a></h4><h4 id="query-string" tabindex="-1">query : <code>string</code> <a class="header-anchor" href="#query-string" aria-label="Permalink to &quot;query : `string`&quot;">​</a></h4><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2>',6)),t("h4",f,[l(n,{type:"tip",text:"async"}),e[8]||(e[8]=a("answer( results, button, next_offset, is_personal, cache_time ) ")),e[9]||(e[9]=t("a",{class:"header-anchor",href:"#asyncanswer-results-button-next-offset-is-personal-cache-time","aria-label":'Permalink to "$asyncanswer( results, button, next_offset, is_personal, cache_time )"'},"​",-1))]),e[13]||(e[13]=r('<table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>results</code></td><td style="text-align:left;"><a href="./InlineQueryResults.html"><code>InlineQueryResults</code></a></td><td style="text-align:left;">Array of results for the inline query</td></tr><tr><td style="text-align:left;"><code>button?</code></td><td style="text-align:left;"><a href="./../type-aliases/InlineQueryResultButtonType.html"><code>InlineQueryResultButtonType</code></a></td><td style="text-align:left;">The button to be shown above inline query results</td></tr><tr><td style="text-align:left;"><code>next_offset?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Pass the offset that a client should send in the next query with the same text to receive more results. Pass an empty string if there are no more results or if you don&#39;t support pagination. Offset length can&#39;t exceed 64 bytes.</td></tr><tr><td style="text-align:left;"><code>is_personal?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">If results may be cached on the server side only for the user that sent the query. By default, results may be returned to any user who sends the same query.</td></tr><tr><td style="text-align:left;"><code>cache_time?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">The maximum amount of time in seconds that the result of the inline query may be cached on the server. Defaults to 300.</td></tr></tbody></table><blockquote><p>Sends an array of results to the inline query.</p><p>Returns: <code>Promise</code>&lt;<code>boolean</code>&gt;</p></blockquote>',2))])}const P=s(c,[["render",y]]);export{q as __pageData,P as default};
