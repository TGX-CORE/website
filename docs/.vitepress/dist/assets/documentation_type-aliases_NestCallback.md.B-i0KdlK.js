import{_ as a,c as t,a2 as n,o as l}from"./chunks/framework.DPuwY6B9.js";const y=JSON.parse('{"title":"NestCallback","description":"","frontmatter":{"outline":[1,4],"next":false,"prev":false},"headers":[],"relativePath":"documentation/type-aliases/NestCallback.md","filePath":"documentation/type-aliases/NestCallback.md"}'),o={name:"documentation/type-aliases/NestCallback.md"};function s(r,e,c,i,p,d){return l(),t("div",null,e[0]||(e[0]=[n('<p>export TypeAlias</p><h1 id="nestcallback" tabindex="-1">NestCallback <a class="header-anchor" href="#nestcallback" aria-label="Permalink to &quot;NestCallback&quot;">â€‹</a></h1><p>Returning a value or null will replace the old value, returning void or undefined will skip the current iteration.</p><p>if Nesting.array is <strong>true</strong>:</p><p><code>(type: &#39;array&#39;, index: number, value: any) =&gt; any</code></p><p><code>(type: &#39;json&#39;, key: any, value: any) =&gt; any</code></p><p>Otherwise it is:</p><p><code>(key: any, value: any) =&gt; any</code></p><p><code>Function</code></p>',9)]))}const k=a(o,[["render",s]]);export{y as __pageData,k as default};
