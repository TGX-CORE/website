import{_ as s,c as e,o as a,a4 as i}from"./chunks/framework.CRCV4hx_.js";const g=JSON.parse('{"title":"Endpoint Methods","description":"","frontmatter":{},"headers":[],"relativePath":"guidebook/Updates/Methods.md","filePath":"guidebook/Updates/Methods.md"}'),n={name:"guidebook/Updates/Methods.md"},t=i(`<h1 id="endpoint-methods" tabindex="-1">Endpoint Methods <a class="header-anchor" href="#endpoint-methods" aria-label="Permalink to &quot;Endpoint Methods&quot;">​</a></h1><p>TGX-CORE Offers three methods while Telegram offers two.</p><ul><li>To set the enpoint method, set the option endpoint in <a href="./../../documentation/interfaces/ClientOptions.html#endpoint-endpoint"><code>ClientOptions#endpoint</code></a></li></ul><h2 id="long-polling" tabindex="-1">Long Polling <a class="header-anchor" href="#long-polling" aria-label="Permalink to &quot;Long Polling&quot;">​</a></h2><p>Long polling is the simplest way of having persistent connection with server, that doesn’t use any specific protocol like WebSocket or Server Sent Events.</p><p>This is the default method set for TGX-CORE.</p><h2 id="webhook" tabindex="-1">Webhook <a class="header-anchor" href="#webhook" aria-label="Permalink to &quot;Webhook&quot;">​</a></h2><p>Use this method to specify a URL and receive incoming updates via an outgoing webhook. Whenever there is an update for the bot, Telegram will send an HTTPS POST request to the specified URL.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Client</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    endpoint: Endpoint.Webhook,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    webhook: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://host-website.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// https://host-website.com/webhook</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        endpoint: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/webhook&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// This is the default value.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://host-website.com/path&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// https://host-website.com/path/endpoint</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        endpoint: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/endpoint&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        port: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="update-packet" tabindex="-1">Update Packet <a class="header-anchor" href="#update-packet" aria-label="Permalink to &quot;Update Packet&quot;">​</a></h2><p>If these methods are insufficient with your needs, you may implement your own method and then passing that update to the <a href="./../../documentation/classes/PollManager.html#handle-update"><code>Client#poll#handle</code></a>.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Cleint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ({</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    endpoint: Endpoint.UpdatePacket</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">client.poll.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(update)</span></span></code></pre></div><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">​</a></h2><p>The information was provided by Telegram&#39;s bot API documentation, <a href="https://core.telegram.org/bots/api#getting-updates" target="_blank" rel="noreferrer"><code>TelegramAPI#getting-updates</code></a></p>`,15),p=[t];function h(l,o,d,r,k,c){return a(),e("div",null,p)}const u=s(n,[["render",h]]);export{g as __pageData,u as default};
