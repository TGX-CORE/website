import{_ as e,c as a,o as t,a4 as i}from"./chunks/framework.CRCV4hx_.js";const m=JSON.parse('{"title":"QueryResultCachedMpeg4GifPayload","description":"","frontmatter":{"outline":[1,4],"next":false,"prev":false},"headers":[],"relativePath":"documentation/interfaces/QueryResultCachedMpeg4GifPayload.md","filePath":"documentation/interfaces/QueryResultCachedMpeg4GifPayload.md"}'),o={name:"documentation/interfaces/QueryResultCachedMpeg4GifPayload.md"},s=i('<p>export Interface</p><h1 id="queryresultcachedmpeg4gifpayload" tabindex="-1">QueryResultCachedMpeg4GifPayload <a class="header-anchor" href="#queryresultcachedmpeg4gifpayload" aria-label="Permalink to &quot;QueryResultCachedMpeg4GifPayload&quot;">​</a></h1><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h4 id="caption-string" tabindex="-1">caption? : <code>string</code> <a class="header-anchor" href="#caption-string" aria-label="Permalink to &quot;caption? : `string`&quot;">​</a></h4><h4 id="caption-entities-messageentities-messageentitypayload" tabindex="-1">caption_entities? : <a href="./../classes/MessageEntities.html"><code>MessageEntities</code></a> | <a href="./MessageEntityPayload.html"><code>MessageEntityPayload</code></a>[] <a class="header-anchor" href="#caption-entities-messageentities-messageentitypayload" aria-label="Permalink to &quot;caption_entities? : [`MessageEntities`](../classes/MessageEntities.md) \\| [`MessageEntityPayload`](./MessageEntityPayload.md)[]&quot;">​</a></h4><h4 id="id-string" tabindex="-1">id : <code>string</code> <a class="header-anchor" href="#id-string" aria-label="Permalink to &quot;id : `string`&quot;">​</a></h4><h4 id="input-message-content-inputmessagecontent" tabindex="-1">input_message_content? : <a href="./../type-aliases/InputMessageContent.html"><code>InputMessageContent</code></a> <a class="header-anchor" href="#input-message-content-inputmessagecontent" aria-label="Permalink to &quot;input_message_content? : [`InputMessageContent`](../type-aliases/InputMessageContent.md)&quot;">​</a></h4><h4 id="mpeg4-file-id-string" tabindex="-1">mpeg4_file_id : <code>string</code> <a class="header-anchor" href="#mpeg4-file-id-string" aria-label="Permalink to &quot;mpeg4_file_id : `string`&quot;">​</a></h4><h4 id="parse-mode-string" tabindex="-1">parse_mode? : <code>string</code> <a class="header-anchor" href="#parse-mode-string" aria-label="Permalink to &quot;parse_mode? : `string`&quot;">​</a></h4><h4 id="reply-markup-inlinekeyboardmarkup" tabindex="-1">reply_markup? : <a href="./../classes/InlineKeyboardMarkup.html"><code>InlineKeyboardMarkup</code></a> <a class="header-anchor" href="#reply-markup-inlinekeyboardmarkup" aria-label="Permalink to &quot;reply_markup? : [`InlineKeyboardMarkup`](../classes/InlineKeyboardMarkup.md)&quot;">​</a></h4><h4 id="show-caption-above-media-boolean" tabindex="-1">show_caption_above_media? : <code>boolean</code> <a class="header-anchor" href="#show-caption-above-media-boolean" aria-label="Permalink to &quot;show_caption_above_media? : `boolean`&quot;">​</a></h4><h4 id="title-string" tabindex="-1">title? : <code>string</code> <a class="header-anchor" href="#title-string" aria-label="Permalink to &quot;title? : `string`&quot;">​</a></h4><h4 id="type-mpeg4-gif" tabindex="-1">type? : <code>&quot;mpeg4_gif&quot;</code> <a class="header-anchor" href="#type-mpeg4-gif" aria-label="Permalink to &quot;type? : `&quot;mpeg4_gif&quot;`&quot;">​</a></h4>',13),n=[s];function r(d,l,c,p,h,u){return t(),a("div",null,n)}const _=e(o,[["render",r]]);export{m as __pageData,_ as default};
