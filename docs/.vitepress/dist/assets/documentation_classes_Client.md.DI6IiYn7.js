import{_ as s,c as i,a2 as n,j as a,G as r,a as t,B as l,o as d}from"./chunks/framework.DPuwY6B9.js";const M=JSON.parse('{"title":"Client","description":"","frontmatter":{"outline":[1,4],"next":false,"prev":false},"headers":[],"relativePath":"documentation/classes/Client.md","filePath":"documentation/classes/Client.md"}'),h={name:"documentation/classes/Client.md"},c={id:"readonly-token-string",tabindex:"-1"},m={id:"asyncintialize-token-provider-token",tabindex:"-1"},g={id:"asyncupdate",tabindex:"-1"};function p(u,e,b,f,k,y){const o=l("Badge");return d(),i("div",null,[e[8]||(e[8]=n('<p>export Class</p><h1 id="client" tabindex="-1">Client <a class="header-anchor" href="#client" aria-label="Permalink to &quot;Client&quot;">​</a></h1><h4 id="extends" tabindex="-1">extends <a class="header-anchor" href="#extends" aria-label="Permalink to &quot;extends&quot;">​</a></h4><p><code>BaseClient</code></p><p>The main hub for interacting with the Telegram API.</p><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Client</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( options )</span></span></code></pre></div><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><a href="./../interfaces/ClientOptions.html"><code>ClientOptions</code></a></td><td style="text-align:left;">The options for your client.</td></tr></tbody></table><h3 id="client-events" tabindex="-1">Client Events <a class="header-anchor" href="#client-events" aria-label="Permalink to &quot;Client Events&quot;">​</a></h3><p>The <a href="./../enumerations/ClientEvent.html">ClientEvent</a> contains the events that the client emits and what their parameters.</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h4 id="actions-actionsmanager" tabindex="-1">actions : <a href="./ActionsManager.html"><code>ActionsManager</code></a> <a class="header-anchor" href="#actions-actionsmanager" aria-label="Permalink to &quot;actions : [`ActionsManager`](./ActionsManager.md)&quot;">​</a></h4><h4 id="api-apimanager" tabindex="-1">api : <a href="./APIManager.html"><code>APIManager</code></a> <a class="header-anchor" href="#api-apimanager" aria-label="Permalink to &quot;api : [`APIManager`](./APIManager.md)&quot;">​</a></h4><h4 id="chats-chatsmanager" tabindex="-1">chats : <a href="./ChatsManager.html"><code>ChatsManager</code></a> <a class="header-anchor" href="#chats-chatsmanager" aria-label="Permalink to &quot;chats : [`ChatsManager`](./ChatsManager.md)&quot;">​</a></h4><h4 id="commands-commandsmanager" tabindex="-1">commands : <a href="./CommandsManager.html"><code>CommandsManager</code></a> <a class="header-anchor" href="#commands-commandsmanager" aria-label="Permalink to &quot;commands : [`CommandsManager`](./CommandsManager.md)&quot;">​</a></h4><h4 id="invoices-invoicesmanager" tabindex="-1">invoices : <a href="./InvoicesManager.html"><code>InvoicesManager</code></a> <a class="header-anchor" href="#invoices-invoicesmanager" aria-label="Permalink to &quot;invoices : [`InvoicesManager`](./InvoicesManager.md)&quot;">​</a></h4><h4 id="logger-logger" tabindex="-1">logger : <a href="./Logger.html"><code>Logger</code></a> <a class="header-anchor" href="#logger-logger" aria-label="Permalink to &quot;logger : [`Logger`](./Logger.md)&quot;">​</a></h4><h4 id="me-memanager" tabindex="-1">me : <a href="./MeManager.html"><code>MeManager</code></a> <a class="header-anchor" href="#me-memanager" aria-label="Permalink to &quot;me : [`MeManager`](./MeManager.md)&quot;">​</a></h4><h4 id="options-clientoptions" tabindex="-1">options : <a href="./../interfaces/ClientOptions.html"><code>ClientOptions</code></a> <a class="header-anchor" href="#options-clientoptions" aria-label="Permalink to &quot;options : [`ClientOptions`](../interfaces/ClientOptions.md)&quot;">​</a></h4><blockquote><p>The options provided to the client.</p></blockquote><h4 id="payments-paymentsmanager" tabindex="-1">payments : <a href="./PaymentsManager.html"><code>PaymentsManager</code></a> <a class="header-anchor" href="#payments-paymentsmanager" aria-label="Permalink to &quot;payments : [`PaymentsManager`](./PaymentsManager.md)&quot;">​</a></h4><h4 id="poll-pollmanager" tabindex="-1">poll : <a href="./PollManager.html"><code>PollManager</code></a> <a class="header-anchor" href="#poll-pollmanager" aria-label="Permalink to &quot;poll : [`PollManager`](./PollManager.md)&quot;">​</a></h4><h4 id="polls-pollsmanager" tabindex="-1">polls : <a href="./PollsManager.html"><code>PollsManager</code></a> <a class="header-anchor" href="#polls-pollsmanager" aria-label="Permalink to &quot;polls : [`PollsManager`](./PollsManager.md)&quot;">​</a></h4><h4 id="registries-registrymanager" tabindex="-1">registries : <code>RegistryManager</code> <a class="header-anchor" href="#registries-registrymanager" aria-label="Permalink to &quot;registries : `RegistryManager`&quot;">​</a></h4>',24)),a("h4",c,[r(o,{type:"danger",text:"readonly"}),e[0]||(e[0]=t(" token? : ")),e[1]||(e[1]=a("code",null,"string",-1)),e[2]||(e[2]=t()),e[3]||(e[3]=a("a",{class:"header-anchor",href:"#readonly-token-string","aria-label":'Permalink to "$readonly token? : `string`"'},"​",-1))]),e[9]||(e[9]=n('<blockquote><p>The token provided by Telegram for your client.</p></blockquote><h4 id="users-usersmanager" tabindex="-1">users : <a href="./UsersManager.html"><code>UsersManager</code></a> <a class="header-anchor" href="#users-usersmanager" aria-label="Permalink to &quot;users : [`UsersManager`](./UsersManager.md)&quot;">​</a></h4><h4 id="webhook-webhookmanager" tabindex="-1">webhook? : <a href="./WebhookManager.html"><code>WebhookManager</code></a> <a class="header-anchor" href="#webhook-webhookmanager" aria-label="Permalink to &quot;webhook? : [`WebhookManager`](./WebhookManager.md)&quot;">​</a></h4><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2>',4)),a("h4",m,[r(o,{type:"tip",text:"async"}),e[4]||(e[4]=t("intialize( token, provider_token ) ")),e[5]||(e[5]=a("a",{class:"header-anchor",href:"#asyncintialize-token-provider-token","aria-label":'Permalink to "$asyncintialize( token, provider_token )"'},"​",-1))]),e[10]||(e[10]=n('<table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>token</code> = <code>...</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Your token for authorization, or stored in process.env as &#39;TELEGRAM_TOKEN&#39;.</td></tr><tr><td style="text-align:left;"><code>provider_token</code> = <code>...</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Your token provided by your payment provider, or stored in process.env as &#39;PAYMENT_PROVIDER_TOKEN&#39;.</td></tr></tbody></table><blockquote><p>Intializes your client and the poll manager, also updating the me manager.</p><p>Returns: <code>Promise</code>&lt;<code>boolean</code>&gt;</p></blockquote>',2)),a("h4",g,[r(o,{type:"tip",text:"async"}),e[6]||(e[6]=t("update( ) ")),e[7]||(e[7]=a("a",{class:"header-anchor",href:"#asyncupdate","aria-label":'Permalink to "$asyncupdate( )"'},"​",-1))]),e[11]||(e[11]=a("blockquote",null,[a("p",null,"Updates the me manager of the client."),a("p",null,[t("Returns: "),a("code",null,"Promise"),t("<"),a("code",null,"void"),t(">")])],-1))])}const P=s(h,[["render",p]]);export{M as __pageData,P as default};
