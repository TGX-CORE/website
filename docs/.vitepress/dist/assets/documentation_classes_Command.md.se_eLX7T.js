import{_ as n,D as r,c as d,j as e,I as i,a as t,a4 as a,o as s}from"./chunks/framework.CRCV4hx_.js";const k=JSON.parse('{"title":"Command","description":"","frontmatter":{"outline":[1,4],"next":false,"prev":false},"headers":[],"relativePath":"documentation/classes/Command.md","filePath":"documentation/classes/Command.md"}'),c={name:"documentation/classes/Command.md"},l=a('<p>export abstract Class</p><h1 id="command" tabindex="-1">Command <a class="header-anchor" href="#command" aria-label="Permalink to &quot;Command&quot;">​</a></h1><h4 id="extends" tabindex="-1">extends <a class="header-anchor" href="#extends" aria-label="Permalink to &quot;extends&quot;">​</a></h4><p><code>Piece</code>&lt;<a href="./../interfaces/CommandMeta.html"><code>CommandMeta</code></a>&gt;</p><p>A command piece.</p><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( context_piece, context_metadata )</span></span></code></pre></div><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>context_piece</code></td><td style="text-align:left;"><code>PieceContext</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>context_metadata</code></td><td style="text-align:left;"><a href="./../interfaces/CommandMeta.html"><code>CommandMeta</code></a></td><td style="text-align:left;"></td></tr></tbody></table><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h4 id="chat-groups-object" tabindex="-1">chat_groups? : <code>Object</code> <a class="header-anchor" href="#chat-groups-object" aria-label="Permalink to &quot;chat_groups? : `Object`&quot;">​</a></h4><p>The chat ids along with their member ids to attach to the scope.</p><h4 id="chat-ids-number" tabindex="-1">chat_ids? : <code>number</code>[] <a class="header-anchor" href="#chat-ids-number" aria-label="Permalink to &quot;chat_ids? : `number`[]&quot;">​</a></h4><p>The chat ids to attach to the scope.</p>',13),h={id:"readonly-client-client",tabindex:"-1"},m=e("a",{href:"./Client.html"},[e("code",null,"Client")],-1),p=e("a",{class:"header-anchor",href:"#readonly-client-client","aria-label":'Permalink to "$readonly client : [`Client`](./Client.md)"'},"​",-1),g=a('<h4 id="command-string" tabindex="-1">command : <code>string</code> <a class="header-anchor" href="#command-string" aria-label="Permalink to &quot;command : `string`&quot;">​</a></h4><p>The command that is attach to this piece.</p><h4 id="description-string" tabindex="-1">description : <code>string</code> <a class="header-anchor" href="#description-string" aria-label="Permalink to &quot;description : `string`&quot;">​</a></h4><p>The description of the command.</p><h4 id="emitter-any" tabindex="-1">emitter : <code>any</code> <a class="header-anchor" href="#emitter-any" aria-label="Permalink to &quot;emitter : `any`&quot;">​</a></h4><h4 id="enabled-boolean" tabindex="-1">enabled : <code>boolean</code> <a class="header-anchor" href="#enabled-boolean" aria-label="Permalink to &quot;enabled : `boolean`&quot;">​</a></h4><h4 id="ignore-boolean" tabindex="-1">ignore : <code>boolean</code> <a class="header-anchor" href="#ignore-boolean" aria-label="Permalink to &quot;ignore : `boolean`&quot;">​</a></h4><p>Wether to ignore the piece if it has been registered for faster intializing.</p><h4 id="language-code-string" tabindex="-1">language_code : <code>string</code> <a class="header-anchor" href="#language-code-string" aria-label="Permalink to &quot;language_code : `string`&quot;">​</a></h4><p>A two-letter ISO 639-1 language code. If empty, commands will be applied to all users from the given scope, for whose language there are no dedicated commands</p><h4 id="name-string" tabindex="-1">name : <code>string</code> <a class="header-anchor" href="#name-string" aria-label="Permalink to &quot;name : `string`&quot;">​</a></h4><h4 id="registry-commandsregistry" tabindex="-1">registry : <code>CommandsRegistry</code> <a class="header-anchor" href="#registry-commandsregistry" aria-label="Permalink to &quot;registry : `CommandsRegistry`&quot;">​</a></h4><h4 id="scope-commandscopetype" tabindex="-1">scope : <a href="./../enumerations/CommandScopeType.html"><code>CommandScopeType</code></a> <a class="header-anchor" href="#scope-commandscopetype" aria-label="Permalink to &quot;scope : [`CommandScopeType`](../enumerations/CommandScopeType.md)&quot;">​</a></h4><p>The scope of the command, see <a href="https://core.telegram.org/bots/api#botcommandscope" target="_blank" rel="noreferrer"> &lt;TelegramAPI#BotCommandScope&gt; </a>.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h4 id="getcommand" tabindex="-1">getCommand( ) <a class="header-anchor" href="#getcommand" aria-label="Permalink to &quot;getCommand( )&quot;">​</a></h4><p>Returns: <a href="./../interfaces/BotCommand.html"><code>BotCommand</code></a></p><h4 id="listen" tabindex="-1">listen( ) <a class="header-anchor" href="#listen" aria-label="Permalink to &quot;listen( )&quot;">​</a></h4><p>Activates or resumes the listener, this is activated on load.</p><p>Returns: <code>void</code></p><h4 id="run-args" tabindex="-1">run( ...args ) <a class="header-anchor" href="#run-args" aria-label="Permalink to &quot;run( ...args )&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...args</code></td><td style="text-align:left;"><code>unknown</code>[]</td><td style="text-align:left;"></td></tr></tbody></table><p>Returns: <code>unknown</code></p><h4 id="stop" tabindex="-1">stop( ) <a class="header-anchor" href="#stop" aria-label="Permalink to &quot;stop( )&quot;">​</a></h4><p>Stops the listener.</p><p>Returns: <code>void</code></p>',26);function u(b,f,_,x,y,q){const o=r("Badge");return s(),d("div",null,[l,e("h4",h,[i(o,{type:"danger",text:"readonly"}),t(" client : "),m,t(),p]),g])}const P=n(c,[["render",u]]);export{k as __pageData,P as default};
