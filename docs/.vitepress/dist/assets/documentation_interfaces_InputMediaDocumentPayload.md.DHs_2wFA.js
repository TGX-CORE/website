import{_ as e,c as a,o as t,a4 as o}from"./chunks/framework.CRCV4hx_.js";const _=JSON.parse('{"title":"InputMediaDocumentPayload","description":"","frontmatter":{"outline":[1,4],"next":false,"prev":false},"headers":[],"relativePath":"documentation/interfaces/InputMediaDocumentPayload.md","filePath":"documentation/interfaces/InputMediaDocumentPayload.md"}'),i={name:"documentation/interfaces/InputMediaDocumentPayload.md"},n=o('<p>export Interface</p><h1 id="inputmediadocumentpayload" tabindex="-1">InputMediaDocumentPayload <a class="header-anchor" href="#inputmediadocumentpayload" aria-label="Permalink to &quot;InputMediaDocumentPayload&quot;">​</a></h1><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h4 id="caption-string" tabindex="-1">caption? : <code>string</code> <a class="header-anchor" href="#caption-string" aria-label="Permalink to &quot;caption? : `string`&quot;">​</a></h4><h4 id="caption-entities-messageentities-messageentitypayload" tabindex="-1">caption_entities? : <a href="./../classes/MessageEntities.html"><code>MessageEntities</code></a> | <a href="./MessageEntityPayload.html"><code>MessageEntityPayload</code></a>[] <a class="header-anchor" href="#caption-entities-messageentities-messageentitypayload" aria-label="Permalink to &quot;caption_entities? : [`MessageEntities`](../classes/MessageEntities.md) \\| [`MessageEntityPayload`](./MessageEntityPayload.md)[]&quot;">​</a></h4><h4 id="disable-content-type-detection-boolean" tabindex="-1">disable_content_type_detection? : <code>boolean</code> <a class="header-anchor" href="#disable-content-type-detection-boolean" aria-label="Permalink to &quot;disable_content_type_detection? : `boolean`&quot;">​</a></h4><h4 id="media-string" tabindex="-1">media : <code>string</code> <a class="header-anchor" href="#media-string" aria-label="Permalink to &quot;media : `string`&quot;">​</a></h4><h4 id="parse-mode-string" tabindex="-1">parse_mode? : <code>string</code> <a class="header-anchor" href="#parse-mode-string" aria-label="Permalink to &quot;parse_mode? : `string`&quot;">​</a></h4><h4 id="thumbnail-inputfile" tabindex="-1">thumbnail? : <a href="./../type-aliases/InputFile.html"><code>InputFile</code></a> <a class="header-anchor" href="#thumbnail-inputfile" aria-label="Permalink to &quot;thumbnail? : [`InputFile`](../type-aliases/InputFile.md)&quot;">​</a></h4><h4 id="type-document" tabindex="-1">type? : <code>&quot;document&quot;</code> <a class="header-anchor" href="#type-document" aria-label="Permalink to &quot;type? : `&quot;document&quot;`&quot;">​</a></h4>',10),s=[n];function d(r,c,l,u,p,h){return t(),a("div",null,s)}const y=e(i,[["render",d]]);export{_ as __pageData,y as default};
