import{_ as t,c as e,o as a,a4 as n}from"./chunks/framework.CRCV4hx_.js";const _=JSON.parse('{"title":"Endpoint","description":"","frontmatter":{"outline":[1,4],"next":false,"prev":false},"headers":[],"relativePath":"documentation/enumerations/Endpoint.md","filePath":"documentation/enumerations/Endpoint.md"}'),o={name:"documentation/enumerations/Endpoint.md"},l=n('<p>export Enum</p><h1 id="endpoint" tabindex="-1">Endpoint <a class="header-anchor" href="#endpoint" aria-label="Permalink to &quot;Endpoint&quot;">​</a></h1><p>Available methods for parsing and receiving updates from Telegram.</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">Member</th><th style="text-align:left;">Value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Poll</td><td style="text-align:left;"><code>0</code></td><td style="text-align:left;">Default long polling method.</td></tr><tr><td style="text-align:left;">UpdatePacket</td><td style="text-align:left;"><code>2</code></td><td style="text-align:left;">If you have your own method of receiving updates, you can manually send updates to the client instead.</td></tr><tr><td style="text-align:left;">Webhook</td><td style="text-align:left;"><code>1</code></td><td style="text-align:left;">Instead of long polling, opens a webhook endpoint to receive updates.</td></tr></tbody></table>',5),d=[l];function i(r,s,p,c,h,f){return a(),e("div",null,d)}const m=t(o,[["render",i]]);export{_ as __pageData,m as default};
