import{_ as r,c as l,a2 as n,j as t,G as o,a,B as s,o as d}from"./chunks/framework.DPuwY6B9.js";const F=JSON.parse('{"title":"Sticker","description":"","frontmatter":{"outline":[1,4],"next":false,"prev":false},"headers":[],"relativePath":"documentation/classes/Sticker.md","filePath":"documentation/classes/Sticker.md"}'),h={name:"documentation/classes/Sticker.md"},c={id:"get-form-string-readstream-string-appendoptions",tabindex:"-1"},m={id:"get-id-string",tabindex:"-1"},p={id:"readonly-client-client",tabindex:"-1"},u={id:"asyncdownload-path",tabindex:"-1"},f={id:"asyncfetch",tabindex:"-1"};function b(g,e,k,q,x,y){const i=s("Badge");return d(),l("div",null,[e[16]||(e[16]=n('<p>export Class</p><h1 id="sticker" tabindex="-1">Sticker <a class="header-anchor" href="#sticker" aria-label="Permalink to &quot;Sticker&quot;">​</a></h1><h4 id="extends" tabindex="-1">extends <a class="header-anchor" href="#extends" aria-label="Permalink to &quot;extends&quot;">​</a></h4><p><a href="./File.html"><code>File</code></a></p><h4 id="implements" tabindex="-1">implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;implements&quot;">​</a></h4><p><a href="./../interfaces/StickerFilePacket.html"><code>StickerFilePacket</code></a></p><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Sticker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( packet, options )</span></span></code></pre></div><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>packet?</code></td><td style="text-align:left;"><code>string</code> | <a href="./../interfaces/FilePacket.html"><code>FilePacket</code></a></td><td style="text-align:left;">The packet, the filel_id, or absolute path to the file to read.</td></tr><tr><td style="text-align:left;"><code>options?</code></td><td style="text-align:left;"><code>FormData.AppendOptions</code></td><td style="text-align:left;">Append options for uploading file, can be empty.</td></tr></tbody></table><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2>',10)),t("h4",c,[o(i,{type:"danger",text:"get"}),e[0]||(e[0]=a(" form : ")),e[1]||(e[1]=t("code",null,"[string, ReadStream, string | AppendOptions]",-1)),e[2]||(e[2]=a()),e[3]||(e[3]=t("a",{class:"header-anchor",href:"#get-form-string-readstream-string-appendoptions","aria-label":'Permalink to "$get form : `[string, ReadStream, string | AppendOptions]`"'},"​",-1))]),t("h4",m,[o(i,{type:"danger",text:"get"}),e[4]||(e[4]=a(" id : ")),e[5]||(e[5]=t("code",null,"string",-1)),e[6]||(e[6]=a()),e[7]||(e[7]=t("a",{class:"header-anchor",href:"#get-id-string","aria-label":'Permalink to "$get id : `string`"'},"​",-1))]),t("h4",p,[o(i,{type:"danger",text:"readonly"}),e[8]||(e[8]=a(" client? : ")),e[9]||(e[9]=t("a",{href:"./Client.html"},[t("code",null,"Client")],-1)),e[10]||(e[10]=a()),e[11]||(e[11]=t("a",{class:"header-anchor",href:"#readonly-client-client","aria-label":'Permalink to "$readonly client? : [`Client`](./Client.md)"'},"​",-1))]),e[17]||(e[17]=n('<blockquote><p>The client will only be availble if the class is passed by tgx-core itself.</p></blockquote><h4 id="custom-emoji-id-string" tabindex="-1">custom_emoji_id? : <code>string</code> <a class="header-anchor" href="#custom-emoji-id-string" aria-label="Permalink to &quot;custom_emoji_id? : `string`&quot;">​</a></h4><h4 id="emoji-string" tabindex="-1">emoji? : <code>string</code> <a class="header-anchor" href="#emoji-string" aria-label="Permalink to &quot;emoji? : `string`&quot;">​</a></h4><h4 id="file-id-string" tabindex="-1">file_id? : <code>string</code> <a class="header-anchor" href="#file-id-string" aria-label="Permalink to &quot;file_id? : `string`&quot;">​</a></h4><h4 id="file-path-string" tabindex="-1">file_path? : <code>string</code> <a class="header-anchor" href="#file-path-string" aria-label="Permalink to &quot;file_path? : `string`&quot;">​</a></h4><h4 id="file-size-number" tabindex="-1">file_size? : <code>number</code> <a class="header-anchor" href="#file-size-number" aria-label="Permalink to &quot;file_size? : `number`&quot;">​</a></h4><h4 id="file-unique-id-string" tabindex="-1">file_unique_id? : <code>string</code> <a class="header-anchor" href="#file-unique-id-string" aria-label="Permalink to &quot;file_unique_id? : `string`&quot;">​</a></h4><h4 id="height-number" tabindex="-1">height? : <code>number</code> <a class="header-anchor" href="#height-number" aria-label="Permalink to &quot;height? : `number`&quot;">​</a></h4><h4 id="is-animated-boolean" tabindex="-1">is_animated? : <code>boolean</code> <a class="header-anchor" href="#is-animated-boolean" aria-label="Permalink to &quot;is_animated? : `boolean`&quot;">​</a></h4><h4 id="is-video-boolean" tabindex="-1">is_video? : <code>boolean</code> <a class="header-anchor" href="#is-video-boolean" aria-label="Permalink to &quot;is_video? : `boolean`&quot;">​</a></h4><h4 id="mask-position-maskposition" tabindex="-1">mask_position? : <a href="./../interfaces/MaskPosition.html"><code>MaskPosition</code></a> <a class="header-anchor" href="#mask-position-maskposition" aria-label="Permalink to &quot;mask_position? : [`MaskPosition`](../interfaces/MaskPosition.md)&quot;">​</a></h4><h4 id="needs-repainting-true" tabindex="-1">needs_repainting? : <code>true</code> <a class="header-anchor" href="#needs-repainting-true" aria-label="Permalink to &quot;needs_repainting? : `true`&quot;">​</a></h4><h4 id="options-formdata-appendoptions" tabindex="-1">options? : <code>FormData.AppendOptions</code> <a class="header-anchor" href="#options-formdata-appendoptions" aria-label="Permalink to &quot;options? : `FormData.AppendOptions`&quot;">​</a></h4><h4 id="path-string" tabindex="-1">path? : <code>string</code> <a class="header-anchor" href="#path-string" aria-label="Permalink to &quot;path? : `string`&quot;">​</a></h4><h4 id="premium-animation-file-filepacket" tabindex="-1">premium_animation? : <a href="./File.html"><code>File</code></a> | <a href="./../interfaces/FilePacket.html"><code>FilePacket</code></a> <a class="header-anchor" href="#premium-animation-file-filepacket" aria-label="Permalink to &quot;premium_animation? : [`File`](./File.md) \\| [`FilePacket`](../interfaces/FilePacket.md)&quot;">​</a></h4><h4 id="set-name-string" tabindex="-1">set_name? : <code>string</code> <a class="header-anchor" href="#set-name-string" aria-label="Permalink to &quot;set_name? : `string`&quot;">​</a></h4><h4 id="thumbnail-photosizefilepacket" tabindex="-1">thumbnail? : <a href="./../interfaces/PhotoSizeFilePacket.html"><code>PhotoSizeFilePacket</code></a> <a class="header-anchor" href="#thumbnail-photosizefilepacket" aria-label="Permalink to &quot;thumbnail? : [`PhotoSizeFilePacket`](../interfaces/PhotoSizeFilePacket.md)&quot;">​</a></h4><h4 id="type-regular-maks-custom-emoji" tabindex="-1">type? : <code>&quot;regular&quot;</code> | <code>&quot;maks&quot;</code> | <code>&quot;custom_emoji&quot;</code> <a class="header-anchor" href="#type-regular-maks-custom-emoji" aria-label="Permalink to &quot;type? : `&quot;regular&quot;` \\| `&quot;maks&quot;` \\| `&quot;custom_emoji&quot;`&quot;">​</a></h4><h4 id="width-number" tabindex="-1">width? : <code>number</code> <a class="header-anchor" href="#width-number" aria-label="Permalink to &quot;width? : `number`&quot;">​</a></h4><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2>',20)),t("h4",u,[o(i,{type:"tip",text:"async"}),e[12]||(e[12]=a("download( path ) ")),e[13]||(e[13]=t("a",{class:"header-anchor",href:"#asyncdownload-path","aria-label":'Permalink to "$asyncdownload( path )"'},"​",-1))]),e[18]||(e[18]=n('<table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>path</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Leave empty if you want a stream, or an absolute path to the file where you want to write the Stream.</td></tr></tbody></table><blockquote><p>Fetches the file and downloads it.</p><p>Returns: <code>Promise</code>&lt;<code>boolean</code> | <code>internal.Stream</code>&gt;</p></blockquote>',2)),t("h4",f,[o(i,{type:"tip",text:"async"}),e[14]||(e[14]=a("fetch( ) ")),e[15]||(e[15]=t("a",{class:"header-anchor",href:"#asyncfetch","aria-label":'Permalink to "$asyncfetch( )"'},"​",-1))]),e[19]||(e[19]=n('<blockquote><p>Fetch the file from Telegram, this is required for downloading the file.</p><p>Returns: <code>Promise</code>&lt;<code>boolean</code> | <a href="./Sticker.html"><code>Sticker</code></a>&gt;</p></blockquote><h4 id="setclient-client" tabindex="-1">setClient( client ) <a class="header-anchor" href="#setclient-client" aria-label="Permalink to &quot;setClient( client )&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>client</code></td><td style="text-align:left;"><a href="./Client.html"><code>Client</code></a></td><td style="text-align:left;">The client to attach.</td></tr></tbody></table><blockquote><p>Returns: <a href="./Sticker.html"><code>Sticker</code></a></p></blockquote>',4))])}const S=r(h,[["render",b]]);export{F as __pageData,S as default};
