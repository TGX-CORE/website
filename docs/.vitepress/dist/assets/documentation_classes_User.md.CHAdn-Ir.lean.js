import{_ as d,c as n,a2 as a,j as t,G as s,a as o,B as r,o as i}from"./chunks/framework.DPuwY6B9.js";const C=JSON.parse('{"title":"User","description":"","frontmatter":{"outline":[1,4],"next":false,"prev":false},"headers":[],"relativePath":"documentation/classes/User.md","filePath":"documentation/classes/User.md"}'),h={name:"documentation/classes/User.md"},c={id:"readonly-client-client",tabindex:"-1"},m={id:"asyncboosts-chat-id",tabindex:"-1"},b={id:"asyncgetprofilephotos-offset-limit",tabindex:"-1"},f={id:"asyncsend-method-packet-form-data",tabindex:"-1"},g={id:"asyncsendinvoice-id",tabindex:"-1"},p={id:"asyncsendtext-text",tabindex:"-1"};function u(x,e,y,k,P,q){const l=r("Badge");return i(),n("div",null,[e[14]||(e[14]=a('<p>export Class</p><h1 id="user" tabindex="-1">User <a class="header-anchor" href="#user" aria-label="Permalink to &quot;User&quot;">​</a></h1><h4 id="extends" tabindex="-1">extends <a class="header-anchor" href="#extends" aria-label="Permalink to &quot;extends&quot;">​</a></h4><p><a href="./ChatBase.html"><code>ChatBase</code></a>&lt;<a href="./User.html"><code>User</code></a>, <a href="./../interfaces/UserPacket.html"><code>UserPacket</code></a>&gt;</p><h4 id="implements" tabindex="-1">implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;implements&quot;">​</a></h4><p><a href="./../interfaces/UserPacket.html"><code>UserPacket</code></a></p><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( client, packet )</span></span></code></pre></div><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>client</code></td><td style="text-align:left;"><a href="./Client.html"><code>Client</code></a></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>packet</code></td><td style="text-align:left;"><a href="./../interfaces/UserPacket.html"><code>UserPacket</code></a></td><td style="text-align:left;"></td></tr></tbody></table><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h4 id="added-to-attachment-menu-boolean" tabindex="-1">added_to_attachment_menu? : <code>boolean</code> <a class="header-anchor" href="#added-to-attachment-menu-boolean" aria-label="Permalink to &quot;added_to_attachment_menu? : `boolean`&quot;">​</a></h4><h4 id="can-connect-to-business-boolean" tabindex="-1">can_connect_to_business? : <code>boolean</code> <a class="header-anchor" href="#can-connect-to-business-boolean" aria-label="Permalink to &quot;can_connect_to_business? : `boolean`&quot;">​</a></h4><h4 id="can-read-all-group-messages-boolean" tabindex="-1">can_read_all_group_messages? : <code>boolean</code> <a class="header-anchor" href="#can-read-all-group-messages-boolean" aria-label="Permalink to &quot;can_read_all_group_messages? : `boolean`&quot;">​</a></h4>',13)),t("h4",c,[s(l,{type:"danger",text:"readonly"}),e[0]||(e[0]=o(" client : ")),e[1]||(e[1]=t("a",{href:"./Client.html"},[t("code",null,"Client")],-1)),e[2]||(e[2]=o()),e[3]||(e[3]=t("a",{class:"header-anchor",href:"#readonly-client-client","aria-label":'Permalink to "$readonly client : [`Client`](./Client.md)"'},"​",-1))]),e[15]||(e[15]=a('<h4 id="first-name-string" tabindex="-1">first_name? : <code>string</code> <a class="header-anchor" href="#first-name-string" aria-label="Permalink to &quot;first_name? : `string`&quot;">​</a></h4><h4 id="has-main-web-app-boolean" tabindex="-1">has_main_web_app? : <code>boolean</code> <a class="header-anchor" href="#has-main-web-app-boolean" aria-label="Permalink to &quot;has_main_web_app? : `boolean`&quot;">​</a></h4><h4 id="id-number" tabindex="-1">id : <code>number</code> <a class="header-anchor" href="#id-number" aria-label="Permalink to &quot;id : `number`&quot;">​</a></h4><h4 id="is-bot-boolean" tabindex="-1">is_bot? : <code>boolean</code> <a class="header-anchor" href="#is-bot-boolean" aria-label="Permalink to &quot;is_bot? : `boolean`&quot;">​</a></h4><h4 id="is-premium-boolean" tabindex="-1">is_premium? : <code>boolean</code> <a class="header-anchor" href="#is-premium-boolean" aria-label="Permalink to &quot;is_premium? : `boolean`&quot;">​</a></h4><h4 id="language-code-string" tabindex="-1">language_code? : <code>string</code> <a class="header-anchor" href="#language-code-string" aria-label="Permalink to &quot;language_code? : `string`&quot;">​</a></h4><h4 id="last-name-string" tabindex="-1">last_name? : <code>string</code> <a class="header-anchor" href="#last-name-string" aria-label="Permalink to &quot;last_name? : `string`&quot;">​</a></h4><h4 id="message-thread-id-number" tabindex="-1">message_thread_id? : <code>number</code> <a class="header-anchor" href="#message-thread-id-number" aria-label="Permalink to &quot;message_thread_id? : `number`&quot;">​</a></h4><h4 id="supports-inline-queries-boolean" tabindex="-1">supports_inline_queries? : <code>boolean</code> <a class="header-anchor" href="#supports-inline-queries-boolean" aria-label="Permalink to &quot;supports_inline_queries? : `boolean`&quot;">​</a></h4><h4 id="username-string" tabindex="-1">username? : <code>string</code> <a class="header-anchor" href="#username-string" aria-label="Permalink to &quot;username? : `string`&quot;">​</a></h4><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2>',11)),t("h4",m,[s(l,{type:"tip",text:"async"}),e[4]||(e[4]=o("boosts( chat_id ) ")),e[5]||(e[5]=t("a",{class:"header-anchor",href:"#asyncboosts-chat-id","aria-label":'Permalink to "$asyncboosts( chat_id )"'},"​",-1))]),e[16]||(e[16]=a('<table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>chat_id</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;"></td></tr></tbody></table><blockquote><p>Returns: <code>Promise</code>&lt;<code>boolean</code> | <a href="./ChatBoost.html"><code>ChatBoost[]</code></a>&gt;</p></blockquote><h4 id="createmessagecollector-options" tabindex="-1">createMessageCollector( options ) <a class="header-anchor" href="#createmessagecollector-options" aria-label="Permalink to &quot;createMessageCollector( options )&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><a href="./../interfaces/MessageCollectorOptions.html"><code>MessageCollectorOptions</code></a></td><td style="text-align:left;">The options for the collector.</td></tr></tbody></table><blockquote><p>Creates a message collector to the current chat.</p><p>Returns: <a href="./MessageCollector.html"><code>MessageCollector</code></a></p></blockquote>',5)),t("h4",b,[s(l,{type:"tip",text:"async"}),e[6]||(e[6]=o("getProfilePhotos( offset, limit ) ")),e[7]||(e[7]=t("a",{class:"header-anchor",href:"#asyncgetprofilephotos-offset-limit","aria-label":'Permalink to "$asyncgetProfilePhotos( offset, limit )"'},"​",-1))]),e[17]||(e[17]=a('<table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>offset?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>limit?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;"></td></tr></tbody></table><blockquote><p>Returns: <code>Promise</code>&lt;<a href="./../interfaces/UserProfilePhotos.html"><code>UserProfilePhotos</code></a>&gt;</p></blockquote>',2)),t("h4",f,[s(l,{type:"tip",text:"async"}),e[8]||(e[8]=o("send( method, packet, form_data ) ")),e[9]||(e[9]=t("a",{class:"header-anchor",href:"#asyncsend-method-packet-form-data","aria-label":'Permalink to "$asyncsend( method, packet, form_data )"'},"​",-1))]),e[18]||(e[18]=a('<table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>method</code></td><td style="text-align:left;"><a href="./../enumerations/MessagePayloadMethod.html"><code>MessagePayloadMethod</code></a></td><td style="text-align:left;">The method of the message.</td></tr><tr><td style="text-align:left;"><code>packet</code></td><td style="text-align:left;"><a href="./../type-aliases/MessagePayload.html"><code>MessagePayload</code></a></td><td style="text-align:left;">The packet of what the message will contain.</td></tr><tr><td style="text-align:left;"><code>form_data?</code></td><td style="text-align:left;"><a href="./FormDataBuilder.html"><code>FormDataBuilder</code></a></td><td style="text-align:left;">The form data for uploading media, see also File</td></tr></tbody></table><blockquote><p>Sends a message to the current channel.</p><p>Returns: <code>Promise</code>&lt;<a href="./Message.html"><code>Message</code></a>&gt;</p></blockquote>',2)),t("h4",g,[s(l,{type:"tip",text:"async"}),e[10]||(e[10]=o("sendInvoice( id ) ")),e[11]||(e[11]=t("a",{class:"header-anchor",href:"#asyncsendinvoice-id","aria-label":'Permalink to "$asyncsendInvoice( id )"'},"​",-1))]),e[19]||(e[19]=a('<table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The id of the invoice.</td></tr></tbody></table><blockquote><p>Sends the stored invoice with the id to the current chat.</p><p>Returns: <code>Promise</code>&lt;<code>void</code> | <a href="./Message.html"><code>Message</code></a>&gt;</p></blockquote>',2)),t("h4",p,[s(l,{type:"tip",text:"async"}),e[12]||(e[12]=o("sendText( text ) ")),e[13]||(e[13]=t("a",{class:"header-anchor",href:"#asyncsendtext-text","aria-label":'Permalink to "$asyncsendText( text )"'},"​",-1))]),e[20]||(e[20]=a('<table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>text</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The text content of the message.</td></tr></tbody></table><blockquote><p>Sends a text message to the current chat.</p><p>Returns: <code>Promise</code>&lt;<a href="./Message.html"><code>Message</code></a>&gt;</p></blockquote>',2))])}const M=d(h,[["render",u]]);export{C as __pageData,M as default};
