import{_ as e,c as a,a2 as n,o as s}from"./chunks/framework.DPuwY6B9.js";const f=JSON.parse('{"title":"nest","description":"","frontmatter":{"outline":[1,4],"next":false,"prev":false},"headers":[],"relativePath":"documentation/functions/nest.md","filePath":"documentation/functions/nest.md"}'),o={name:"documentation/functions/nest.md"};function l(d,t,i,c,r,h){return s(),a("div",null,t[0]||(t[0]=[n('<p>export Function</p><h1 id="nest" tabindex="-1">nest <a class="header-anchor" href="#nest" aria-label="Permalink to &quot;nest&quot;">​</a></h1><p>Reads an object including nested objects but ignores classes, Return the duplicated and modified object.</p><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( object, additional, fn )</span></span></code></pre></div><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>object</code> = <code>{}</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">The object to read and nest.</td></tr><tr><td style="text-align:left;"><code>additional</code></td><td style="text-align:left;"><a href="./../interfaces/Nesting.html"><code>Nesting</code></a></td><td style="text-align:left;">Additional options on how to read the object.</td></tr><tr><td style="text-align:left;"><code>fn</code></td><td style="text-align:left;"><a href="./../type-aliases/NestCallback.html"><code>NestCallback</code></a></td><td style="text-align:left;">The callback function to call whenever a key and value has been read. Additional information is available.</td></tr></tbody></table><p>Return: any</p>',7)]))}const u=e(o,[["render",l]]);export{f as __pageData,u as default};
