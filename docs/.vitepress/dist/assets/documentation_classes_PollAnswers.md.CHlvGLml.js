import{_ as t,c as e,o as a,a4 as s}from"./chunks/framework.CRCV4hx_.js";const b=JSON.parse('{"title":"PollAnswers","description":"","frontmatter":{"outline":[1,4],"next":false,"prev":false},"headers":[],"relativePath":"documentation/classes/PollAnswers.md","filePath":"documentation/classes/PollAnswers.md"}'),d={name:"documentation/classes/PollAnswers.md"},l=s('<p>export Class</p><h1 id="pollanswers" tabindex="-1">PollAnswers <a class="header-anchor" href="#pollanswers" aria-label="Permalink to &quot;PollAnswers&quot;">​</a></h1><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PollAnswers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( options )</span></span></code></pre></div><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><a href="./../interfaces/PollOption.html"><code>PollOption</code></a>[]</td><td style="text-align:left;"></td></tr></tbody></table><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h4 id="records-object" tabindex="-1">records : <code>Object</code> <a class="header-anchor" href="#records-object" aria-label="Permalink to &quot;records : `Object`&quot;">​</a></h4><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h4 id="answered-id-user-id" tabindex="-1">answered( id, user_id ) <a class="header-anchor" href="#answered-id-user-id" aria-label="Permalink to &quot;answered( id, user_id )&quot;">​</a></h4><p>Checks if the user has answered an answer with the id.</p><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">The id of the answer.</td></tr><tr><td style="text-align:left;"><code>user_id</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">The id of the user to check.</td></tr></tbody></table><p>Returns: <code>boolean</code></p><h4 id="update-user-id-ids" tabindex="-1">update( user_id, ids ) <a class="header-anchor" href="#update-user-id-ids" aria-label="Permalink to &quot;update( user_id, ids )&quot;">​</a></h4><p>Updates the answers of a user.</p><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>user_id</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">The id of the user.</td></tr><tr><td style="text-align:left;"><code>ids</code></td><td style="text-align:left;"><code>number</code>[]</td><td style="text-align:left;">The ids of the answers of the users.</td></tr></tbody></table><p>Returns: <code>void</code></p>',16),r=[l];function o(i,n,h,c,p,u){return a(),e("div",null,r)}const x=t(d,[["render",o]]);export{b as __pageData,x as default};
