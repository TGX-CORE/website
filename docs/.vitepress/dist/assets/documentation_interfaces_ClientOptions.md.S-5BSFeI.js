import{_ as e,c as a,o as t,a4 as i}from"./chunks/framework.CRCV4hx_.js";const u=JSON.parse('{"title":"ClientOptions","description":"","frontmatter":{"outline":[1,4],"next":false,"prev":false},"headers":[],"relativePath":"documentation/interfaces/ClientOptions.md","filePath":"documentation/interfaces/ClientOptions.md"}'),o={name:"documentation/interfaces/ClientOptions.md"},r=i('<p>export Interface</p><h1 id="clientoptions" tabindex="-1">ClientOptions <a class="header-anchor" href="#clientoptions" aria-label="Permalink to &quot;ClientOptions&quot;">​</a></h1><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h4 id="actions-clientaction-all-clientaction" tabindex="-1">actions? : <a href="./../enumerations/ClientAction.html#all"><code>ClientAction.All</code></a> | <a href="./../enumerations/ClientAction.html"><code>ClientAction</code></a>[] <a class="header-anchor" href="#actions-clientaction-all-clientaction" aria-label="Permalink to &quot;actions? : [`ClientAction.All`](../enumerations/ClientAction.md#all) \\| [`ClientAction`](../enumerations/ClientAction.md)[]&quot;">​</a></h4><h4 id="api-apimanageroptions" tabindex="-1">api? : <code>APIManagerOptions</code> <a class="header-anchor" href="#api-apimanageroptions" aria-label="Permalink to &quot;api? : `APIManagerOptions`&quot;">​</a></h4><h4 id="endpoint-endpoint" tabindex="-1">endpoint? : <a href="./../enumerations/Endpoint.html"><code>Endpoint</code></a> <a class="header-anchor" href="#endpoint-endpoint" aria-label="Permalink to &quot;endpoint? : [`Endpoint`](../enumerations/Endpoint.md)&quot;">​</a></h4><p>The method for receiving updates from Telegram.</p><h4 id="logger-loggeroptions" tabindex="-1">logger? : <code>LoggerOptions</code> <a class="header-anchor" href="#logger-loggeroptions" aria-label="Permalink to &quot;logger? : `LoggerOptions`&quot;">​</a></h4><h4 id="parseables-parseables" tabindex="-1">parseables? : <a href="./../enumerations/Parseables.html"><code>Parseables</code></a>[] <a class="header-anchor" href="#parseables-parseables" aria-label="Permalink to &quot;parseables? : [`Parseables`](../enumerations/Parseables.md)[]&quot;">​</a></h4><h4 id="partials-partialtypes" tabindex="-1">partials? : <a href="./../enumerations/PartialTypes.html"><code>PartialTypes</code></a>[] <a class="header-anchor" href="#partials-partialtypes" aria-label="Permalink to &quot;partials? : [`PartialTypes`](../enumerations/PartialTypes.md)[]&quot;">​</a></h4><h4 id="poll-pollmanageroptions" tabindex="-1">poll? : <a href="./PollManagerOptions.html"><code>PollManagerOptions</code></a> <a class="header-anchor" href="#poll-pollmanageroptions" aria-label="Permalink to &quot;poll? : [`PollManagerOptions`](./PollManagerOptions.md)&quot;">​</a></h4><h4 id="registries-registries-all-registries" tabindex="-1">registries? : <a href="./../enumerations/Registries.html#all"><code>Registries.All</code></a> | <a href="./../enumerations/Registries.html"><code>Registries</code></a>[] <a class="header-anchor" href="#registries-registries-all-registries" aria-label="Permalink to &quot;registries? : [`Registries.All`](../enumerations/Registries.md#all) \\| [`Registries`](../enumerations/Registries.md)[]&quot;">​</a></h4><p>Set to <code>Registries.All</code> to load all registries or an array of specific registries.</p><h4 id="sweep-string-boolean" tabindex="-1">sweep? : <code>string</code> | <code>boolean</code> <a class="header-anchor" href="#sweep-string-boolean" aria-label="Permalink to &quot;sweep? : `string` \\| `boolean`&quot;">​</a></h4><p>Set to <em>true</em> to sweep main directory or set to a path relative from the current working directory to sweep a specific path.</p>',15),n=[r];function s(l,c,p,d,h,m){return t(),a("div",null,n)}const f=e(o,[["render",s]]);export{u as __pageData,f as default};
