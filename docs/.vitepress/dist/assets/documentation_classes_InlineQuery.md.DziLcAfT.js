import{_ as r,D as l,c as i,j as e,I as n,a as t,a4 as s,o}from"./chunks/framework.CRCV4hx_.js";const S=JSON.parse('{"title":"InlineQuery","description":"","frontmatter":{"outline":[1,4],"next":false,"prev":false},"headers":[],"relativePath":"documentation/classes/InlineQuery.md","filePath":"documentation/classes/InlineQuery.md"}'),d={name:"documentation/classes/InlineQuery.md"},c=s('<p>export Class</p><h1 id="inlinequery" tabindex="-1">InlineQuery <a class="header-anchor" href="#inlinequery" aria-label="Permalink to &quot;InlineQuery&quot;">​</a></h1><h4 id="extends" tabindex="-1">extends <a class="header-anchor" href="#extends" aria-label="Permalink to &quot;extends&quot;">​</a></h4><p><code>BaseClass</code>&lt;<a href="./InlineQuery.html"><code>InlineQuery</code></a>, <a href="./../interfaces/InlineQueryPacket.html"><code>InlineQueryPacket</code></a>&gt;</p><h4 id="implements" tabindex="-1">implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;implements&quot;">​</a></h4><p><a href="./../interfaces/InlineQueryPacket.html"><code>InlineQueryPacket</code></a></p><p>Represents an incoming inline query.</p><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InlineQuery</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( client, packet )</span></span></code></pre></div><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>client</code></td><td style="text-align:left;"><a href="./Client.html"><code>Client</code></a></td><td style="text-align:left;">The client of the incoming inline query.</td></tr><tr><td style="text-align:left;"><code>packet</code></td><td style="text-align:left;"><a href="./../interfaces/InlineQueryPacket.html"><code>InlineQueryPacket</code></a></td><td style="text-align:left;">The packet of the incoming inline query.</td></tr></tbody></table><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2>',11),h={id:"get-user-user",tabindex:"-1"},u=e("a",{href:"./User.html"},[e("code",null,"User")],-1),f=e("a",{class:"header-anchor",href:"#get-user-user","aria-label":'Permalink to "$get user : [`User`](./User.md)"'},"​",-1),y={id:"readonly-client-client",tabindex:"-1"},m=e("a",{href:"./Client.html"},[e("code",null,"Client")],-1),_=e("a",{class:"header-anchor",href:"#readonly-client-client","aria-label":'Permalink to "$readonly client : [`Client`](./Client.md)"'},"​",-1),p=s('<h4 id="from-user" tabindex="-1">from : <a href="./User.html"><code>User</code></a> <a class="header-anchor" href="#from-user" aria-label="Permalink to &quot;from : [`User`](./User.md)&quot;">​</a></h4><h4 id="id-string" tabindex="-1">id : <code>string</code> <a class="header-anchor" href="#id-string" aria-label="Permalink to &quot;id : `string`&quot;">​</a></h4><h4 id="offset-string" tabindex="-1">offset : <code>string</code> <a class="header-anchor" href="#offset-string" aria-label="Permalink to &quot;offset : `string`&quot;">​</a></h4><h4 id="query-string" tabindex="-1">query : <code>string</code> <a class="header-anchor" href="#query-string" aria-label="Permalink to &quot;query : `string`&quot;">​</a></h4><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2>',5),g={id:"asyncanswer-results-button-next-offset-is-personal-cache-time",tabindex:"-1"},x=e("a",{class:"header-anchor",href:"#asyncanswer-results-button-next-offset-is-personal-cache-time","aria-label":'Permalink to "$asyncanswer( results, button, next_offset, is_personal, cache_time )"'},"​",-1),b=s('<p>Sends an array of results to the inline query.</p><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>results</code></td><td style="text-align:left;"><a href="./InlineQueryResults.html"><code>InlineQueryResults</code></a></td><td style="text-align:left;">Array of results for the inline query</td></tr><tr><td style="text-align:left;"><code>button?</code></td><td style="text-align:left;"><a href="./../type-aliases/InlineQueryResultButtonType.html"><code>InlineQueryResultButtonType</code></a></td><td style="text-align:left;">The button to be shown above inline query results</td></tr><tr><td style="text-align:left;"><code>next_offset?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Pass the offset that a client should send in the next query with the same text to receive more results. Pass an empty string if there are no more results or if you don&#39;t support pagination. Offset length can&#39;t exceed 64 bytes.</td></tr><tr><td style="text-align:left;"><code>is_personal?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">If results may be cached on the server side only for the user that sent the query. By default, results may be returned to any user who sends the same query.</td></tr><tr><td style="text-align:left;"><code>cache_time?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">The maximum amount of time in seconds that the result of the inline query may be cached on the server. Defaults to 300.</td></tr></tbody></table><p>Returns: <code>Promise</code>&lt;<code>boolean</code>&gt;</p>',3);function k(q,P,I,T,C,Q){const a=l("Badge");return o(),i("div",null,[c,e("h4",h,[n(a,{type:"danger",text:"get"}),t(" user : "),u,t(),f]),e("h4",y,[n(a,{type:"danger",text:"readonly"}),t(" client : "),m,t(),_]),p,e("h4",g,[n(a,{type:"tip",text:"async"}),t("answer( results, button, next_offset, is_personal, cache_time ) "),x]),b])}const A=r(d,[["render",k]]);export{S as __pageData,A as default};
